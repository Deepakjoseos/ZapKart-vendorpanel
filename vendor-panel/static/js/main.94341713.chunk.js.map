{"version":3,"sources":["auth/FetchInterceptor.js","redux/reducers/Auth.js","redux/reducers/Theme.js","redux/reducers/index.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavNotification.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","components/shared-components/Flex/index.js","components/shared-components/ColorPicker/index.js","constants/ThemeConstant.js","redux/constants/Auth.js","services/auth/vendor.js","redux/actions/Auth.js","redux/constants/Theme.js","utils/index.js","serviceWorker.js","index.js","configs/AppConfig.js","configs/EnvironmentConfig.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","components/util-components/Icon/index.js","components/shared-components/Loading/index.js"],"names":["store","service","axios","create","baseURL","API_BASE_URL","timeout","injectStore","_store","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","error","notification","message","Promise","reject","response","data","notificationParam","status","getState","auth","authorized","warning","window","location","href","includes","history","replace","description","storeAction","dispatch","signOut","FirebaseService","signOutRequest","removeItem","reload","push","Utils","errorValidator","initState","loading","showMessage","redirect","user","token","state","action","type","AUTHENTICATED","payload","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SIGNOUT_SUCCESS","SIGNUP_SUCCESS","SHOW_LOADING","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","initTheme","THEME_CONFIG","theme","TOGGLE_COLLAPSED_NAV","navCollapsed","SIDE_NAV_STYLE_CHANGE","sideNavTheme","CHANGE_LOCALE","locale","NAV_TYPE_CHANGE","navType","TOP_NAV_COLOR_CHANGE","topNavColor","HEADER_NAV_COLOR_CHANGE","headerNavColor","TOGGLE_MOBILE_NAV","mobileNav","SWITCH_THEME","currentTheme","DIRECTION_CHANGE","direction","reducers","combineReducers","Theme","Auth","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","SIGNIN","email","password","call","signInEmailRequest","put","showAuthMessage","getIdTokenResult","then","res","setItem","SIGNOUT","undefined","signOutUser","signOutSuccess","SIGNUP","signUpEmailRequest","SIGNIN_WITH_GOOGLE","signInGoogleRequest","SIGNIN_WITH_FACEBOOK","signInFacebookRequest","uid","signInWithFacebookAuthenticated","all","fork","sagaMiddleware","createSagaMiddleware","middlewares","thunk","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","props","withRef","dashBoardNavTree","APP_PREFIX_PATH","PlusCircleOutlined","FileTextOutlined","AUTH_PREFIX_PATH","SafetyOutlined","StopOutlined","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","AppstoreOutlined","FormatPainterOutlined","DotChartOutlined","navigationConfig","MailOutlined","MessageOutlined","CalendarOutlined","BulbOutlined","ShoppingCartOutlined","AntDesignOutlined","InfoCircleOutlined","LayoutOutlined","CompassOutlined","FileDoneOutlined","DesktopOutlined","CommentOutlined","RobotOutlined","PieChartOutlined","EnvironmentOutlined","BookOutlined","FileUnknownOutlined","ProfileOutlined","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","closeMobileNav","SIDE_NAV_LIGHT","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","className","map","menu","ItemGroup","subMenuFirst","Icon","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","NAV_TYPE_SIDE","Sider","Layout","SIDE_NAV_DARK","width","SIDE_NAV_WIDTH","collapsed","autoHide","getColorContrast","NAV_TYPE_TOP","getLogoWidthGutter","isNavTop","mobileLogo","SIDE_NAV_COLLAPSED_WIDTH","getLogo","logoType","getLogoDisplay","src","alt","APP_NAME","onClose","placement","closable","visible","bodyStyle","padding","Flex","flexDirection","justifyContent","alignItems","ArrowLeftOutlined","NavNotification","useState","setVisible","notificationData","notificationList","overlay","onVisibleChange","flag","trigger","count","BellOutlined","menuItem","EditOutlined","useSelector","profileMenu","size","displayImage","firstName","userType","el","i","e","LogoutOutlined","SelectedLanguage","language","lang","filter","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","preventDefault","GlobalOutlined","colorOptions","ListOption","name","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","onDirectionChange","configState","isCollapse","useThemeSwitcher","switcher","themes","ColorPicker","color","colorChange","value","rgb","rgba","r","g","b","a","hex","rgbaToHex","Group","onChange","target","Button","checked","isChecked","changedTheme","DIR_LTR","DIR_RTL","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","this","SettingOutlined","Component","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","searchText","item","label","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","useEffect","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","pathname","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","Loading","cover","component","lazy","from","React","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","screens","isNavSide","getLayoutGutter","paddingLeft","paddingRight","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","RouteInterceptor","children","isAuthenticated","rest","console","log","render","currentAppLocale","Array","exact","createHistory","dark","process","light","App","useDispatch","onAuthStateChanged","idTokenResult","claims","authVendorService","getProfile","dispatchingData","lastName","phone","phoneNumber","emailVerified","phoneVerified","address","business","gst","tanNumber","authenticated","showLoading","displayName","photoURL","warn","themeMap","defaultTheme","insertionPoint","Views","mobileFlex","defaultProps","pickerColor","setPickerColor","boxColor","setBoxColor","onPickerDropdown","ROW_GUTTER","fetch","method","createVendor","editProfile","signIn","signUp","signInWithGoogle","hideAuthMessage","initials","match","shift","pop","navTree","route","p","hasOwnProperty","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","percent","R","G","B","RR","GG","BB","trim","str","inParts","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","input","breakpoints","parsed","categories","parentId","categoryList","cat","cate","createCategoryList","locations","delivery","deliveryList","del","createDeliveryLocationList","errors","cur","Object","entries","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","API_ENDPOINT_URL","FirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","firebaseConfig","currentUser","googleAuthProvider","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","signInWithEmailAndPassword","catch","err","signInWithPopup","createUserWithEmailAndPassword","createElement","fontSize","spin","align","indicator"],"mappings":"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","file":"static/js/main.94341713.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport { history } from '../App'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd'\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nimport storeAction from 'redux/store'\r\nimport Utils from 'utils'\r\nimport { signOut } from 'redux/actions/Auth'\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n})\r\n\r\nlet store\r\n\r\nexport const injectStore = (_store) => {\r\n  store = _store\r\n}\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(\r\n  (config) => {\r\n    const jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\r\n    if (jwtToken) {\r\n      config.headers[TOKEN_PAYLOAD_KEY] = `Bearer ${jwtToken}`\r\n    }\r\n\r\n    // if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n    //   history.push(ENTRY_ROUTE)\r\n    //   window.location.reload()\r\n    // }\r\n\r\n    return config\r\n  },\r\n  (error) => {\r\n    // Do something with request error here\r\n    notification.error({\r\n      message: 'Error',\r\n    })\r\n    Promise.reject(error)\r\n  }\r\n)\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use(\r\n  (response) => {\r\n    return response.data\r\n  },\r\n  (error) => {\r\n    let notificationParam = {\r\n      message: '',\r\n    }\r\n\r\n    // Remove token and redirect\r\n    if (error.response.status === 401) {\r\n      if (store.getState().auth.authorized) {\r\n        notification.warning({ message: 'Verification needed' })\r\n        // window.location.reload()\r\n        if (!window.location.href.includes('/app/dashboards/authdetails')) {\r\n          history.replace('/app/dashboards/authdetails')\r\n        }\r\n      } else {\r\n        notificationParam.message = 'Verification failed'\r\n        notificationParam.description = 'Please login again'\r\n        storeAction.dispatch(signOut())\r\n        FirebaseService.signOutRequest()\r\n        localStorage.removeItem(AUTH_TOKEN)\r\n        window.location.reload()\r\n        history.push(ENTRY_ROUTE)\r\n      }\r\n    }\r\n    if (error.response.status === 403) {\r\n      // notificationParam.message = 'Verification failed'\r\n      // notificationParam.description = 'Please login again'\r\n      // const fetchUser = () => async (getState, dispatch) => {\r\n      //   storeAction.dispatch(signOut())\r\n      // }\r\n      // fetchUser()\r\n      // console.log(storeAction, store, 'storeds')\r\n      // ;(async () => {\r\n      //   store.dispatch(await signOut())\r\n      //   // dispatch(await getChartData());\r\n      // })()\r\n      store.dispatch(signOut())\r\n\r\n      FirebaseService.signOutRequest()\r\n      localStorage.removeItem(AUTH_TOKEN)\r\n      history.replace(ENTRY_ROUTE)\r\n      // window.location.reload()\r\n    }\r\n\r\n    if (error.response.status === 404) {\r\n      notificationParam.message = 'Not Found'\r\n    }\r\n\r\n    if (error.response.status === 500) {\r\n      notificationParam.message = 'Internal Server Error'\r\n    }\r\n\r\n    if (error.response.status === 508) {\r\n      notificationParam.message = 'Time Out'\r\n    }\r\n    // if (notificationParam?.message) {\r\n    //   notification.error(notificationParam)\r\n    // }\r\n\r\n    Utils.errorValidator(error.response.data)\r\n\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n","import { currentUser } from 'auth/FirebaseAuth'\r\nimport FirebaseService from 'services/FirebaseService'\r\nimport {\r\n  AUTH_TOKEN,\r\n  AUTHENTICATED,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNOUT_SUCCESS,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n} from '../constants/Auth'\r\n\r\nconst initState = {\r\n  loading: true,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  user: null,\r\n  authorized: null,\r\n  token: null,\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        redirect: '/',\r\n        authorized: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      }\r\n    case SHOW_AUTH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: action.message,\r\n        showMessage: true,\r\n        loading: false,\r\n      }\r\n    case HIDE_AUTH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: '',\r\n        showMessage: false,\r\n      }\r\n    case SIGNOUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        authorized: null,\r\n        redirect: '/auth/login',\r\n        loading: false,\r\n      }\r\n    }\r\n    case SIGNUP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.token,\r\n      }\r\n    }\r\n    case SHOW_LOADING: {\r\n      return {\r\n        ...state,\r\n        loading: action.loading === null ? true : action.loading,\r\n      }\r\n    }\r\n    case SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.token,\r\n      }\r\n    }\r\n    case SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.token,\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default auth\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","import { all, takeEvery, put, fork, call } from 'redux-saga/effects'\r\nimport {\r\n  AUTH_TOKEN,\r\n  SIGNIN,\r\n  SIGNOUT,\r\n  SIGNUP,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_FACEBOOK,\r\n} from '../constants/Auth'\r\nimport {\r\n  showAuthMessage,\r\n  authenticated,\r\n  signOutSuccess,\r\n  signUpSuccess,\r\n  signInWithGoogleAuthenticated,\r\n  signInWithFacebookAuthenticated,\r\n} from '../actions/Auth'\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({ payload }) {\r\n    const { email, password } = payload\r\n    try {\r\n      const user = yield call(\r\n        FirebaseService.signInEmailRequest,\r\n        email,\r\n        password\r\n      )\r\n      // if (user.user.uid) {\r\n\r\n      //   yield put(showAuthMessage('Success'))\r\n      // }\r\n      if (user.message) {\r\n        yield put(showAuthMessage('Email or password is incorrect'))\r\n      } else {\r\n        user.user\r\n          .getIdTokenResult(true)\r\n          .then((res) => window.localStorage.setItem(AUTH_TOKEN, res.token))\r\n        // localStorage.setItem(AUTH_TOKEN, user.user.uid)\r\n        // yield put(authenticated(user.user.uid))\r\n        window.location.href = '/app/dashboards/authdetails'\r\n      }\r\n    } catch (err) {\r\n      yield put(showAuthMessage(err))\r\n    }\r\n  })\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n    try {\r\n      const signOutUser = yield call(FirebaseService.signOutRequest)\r\n      if (signOutUser === undefined) {\r\n        localStorage.removeItem(AUTH_TOKEN)\r\n        yield put(signOutSuccess(signOutUser))\r\n      } else {\r\n        yield put(showAuthMessage(signOutUser.message))\r\n      }\r\n    } catch (err) {\r\n      yield put(showAuthMessage(err))\r\n    }\r\n  })\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({ payload }) {\r\n    const { email, password } = payload\r\n    try {\r\n      const user = yield call(\r\n        FirebaseService.signUpEmailRequest,\r\n        email,\r\n        password\r\n      )\r\n      // if (user.message) {\r\n      //   yield put(showAuthMessage(user.message))\r\n      // } else {\r\n      //   localStorage.setItem(AUTH_TOKEN, user.user.uid)\r\n      //   yield put(signUpSuccess(user.user.uid))\r\n      // }\r\n      if (user.message) {\r\n        yield put(showAuthMessage(user.message))\r\n      } else {\r\n        user.user\r\n          .getIdTokenResult(true)\r\n          .then((res) => window.localStorage.setItem(AUTH_TOKEN, res.token))\r\n\r\n        window.location.href = '/app/dashboards/authdetails'\r\n        // localStorage.setItem(AUTH_TOKEN, user.user.uid)\r\n        // yield put(authenticated(user.user.uid))\r\n      }\r\n    } catch (error) {\r\n      yield put(showAuthMessage(error))\r\n    }\r\n  })\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n    try {\r\n      const user = yield call(FirebaseService.signInGoogleRequest)\r\n      // if (user.message) {\r\n      //   yield put(showAuthMessage(user.message))\r\n      // } else {\r\n      //   localStorage.setItem(AUTH_TOKEN, user.user.uid)\r\n      //   yield put(signInWithGoogleAuthenticated(user.user.uid))\r\n      // }\r\n      if (user.message) {\r\n        yield put(showAuthMessage(user.message))\r\n      } else {\r\n        user.user\r\n          .getIdTokenResult(true)\r\n          .then((res) => window.localStorage.setItem(AUTH_TOKEN, res.token))\r\n\r\n        window.location.href = '/app/dashboards/authdetails'\r\n        // localStorage.setItem(AUTH_TOKEN, user.user.uid)\r\n        // yield put(authenticated(user.user.uid))\r\n      }\r\n    } catch (error) {\r\n      yield put(showAuthMessage(error))\r\n    }\r\n  })\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n    try {\r\n      const user = yield call(FirebaseService.signInFacebookRequest)\r\n      if (user.message) {\r\n        yield put(showAuthMessage(user.message))\r\n      } else {\r\n        localStorage.setItem(AUTH_TOKEN, user.user.uid)\r\n        yield put(signInWithFacebookAuthenticated(user.user.uid))\r\n      }\r\n    } catch (error) {\r\n      yield put(showAuthMessage(error))\r\n    }\r\n  })\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(signInWithFBEmail),\r\n    fork(signOut),\r\n    fork(signUpWithFBEmail),\r\n    fork(signInWithFBGoogle),\r\n    fork(signInWithFacebook),\r\n  ])\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport reducers from '../reducers'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport thunk from 'redux-thunk'\r\nimport rootSaga from '../sagas/index'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst middlewares = [thunk, sagaMiddleware]\r\n\r\nfunction configureStore(preloadedState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n  const store = createStore(\r\n    reducers,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  )\r\n\r\n  sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('../reducers/index', () => {\r\n      const nextRootReducer = require('../reducers/index')\r\n      store.replaceReducer(nextRootReducer)\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\nconst store = configureStore()\r\n\r\nexport default store\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import {\r\n  DashboardOutlined,\r\n  AppstoreOutlined,\r\n  FileTextOutlined,\r\n  PieChartOutlined,\r\n  BorderOutlined,\r\n  EnvironmentOutlined,\r\n  AntDesignOutlined,\r\n  SafetyOutlined,\r\n  StopOutlined,\r\n  DotChartOutlined,\r\n  MailOutlined,\r\n  MessageOutlined,\r\n  CalendarOutlined,\r\n  BulbOutlined,\r\n  InfoCircleOutlined,\r\n  CompassOutlined,\r\n  LayoutOutlined,\r\n  DesktopOutlined,\r\n  FileDoneOutlined,\r\n  CommentOutlined,\r\n  RobotOutlined,\r\n  PlusCircleOutlined,\r\n  FundOutlined,\r\n  VerifiedOutlined,\r\n  ShoppingCartOutlined,\r\n  BookOutlined,\r\n  FileUnknownOutlined,\r\n  ProfileOutlined,\r\n  FundProjectionScreenOutlined,\r\n  UsergroupAddOutlined,\r\n  FormatPainterOutlined,\r\n  UserOutlined,\r\n  ApartmentOutlined,\r\n} from '@ant-design/icons'\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst extraNavTree = [\r\n  {\r\n    key: 'extra',\r\n    path: `${APP_PREFIX_PATH}/pages`,\r\n    title: 'sidenav.pages',\r\n    icon: PlusCircleOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'extra-pages',\r\n        path: `${APP_PREFIX_PATH}/pages`,\r\n        title: 'sidenav.pages',\r\n        icon: FileTextOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'extra-pages-profile',\r\n            path: `${APP_PREFIX_PATH}/pages/profile`,\r\n            title: 'sidenav.pages.profile',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-pages-list',\r\n            path: `${APP_PREFIX_PATH}/pages/user-list`,\r\n            title: 'sidenav.pages.userlist',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-pages-invoice',\r\n            path: `${APP_PREFIX_PATH}/pages/invoice`,\r\n            title: 'sidenav.pages.invoice',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-pages-pricing',\r\n            path: `${APP_PREFIX_PATH}/pages/pricing`,\r\n            title: 'sidenav.pages.pricing',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-pages-faq',\r\n            path: `${APP_PREFIX_PATH}/pages/faq`,\r\n            title: 'sidenav.pages.faq',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-pages-setting',\r\n            path: `${APP_PREFIX_PATH}/pages/setting`,\r\n            title: 'sidenav.pages.setting',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'extra-auth',\r\n        path: `${AUTH_PREFIX_PATH}`,\r\n        title: 'sidenav.authentication',\r\n        icon: SafetyOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'extra-auth-login-1',\r\n            path: `${AUTH_PREFIX_PATH}/login-1`,\r\n            title: 'sidenav.authentication.login.1',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-auth-login-2',\r\n            path: `${AUTH_PREFIX_PATH}/login-2`,\r\n            title: 'sidenav.authentication.login.2',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-auth-register-1',\r\n            path: `${AUTH_PREFIX_PATH}/register-1`,\r\n            title: 'sidenav.authentication.register.1',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-auth-register-2',\r\n            path: `${AUTH_PREFIX_PATH}/register-2`,\r\n            title: 'sidenav.authentication.register.2',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-auth-forgot-password',\r\n            path: `${AUTH_PREFIX_PATH}/forgot-password`,\r\n            title: 'sidenav.authentication.forgetPassword',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'extra-errors',\r\n        path: `${AUTH_PREFIX_PATH}/error-1`,\r\n        title: 'sidenav.errors',\r\n        icon: StopOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'extra-errors-error-1',\r\n            path: `${AUTH_PREFIX_PATH}/error-1`,\r\n            title: 'sidenav.errors.error.1',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'extra-errors-error-2',\r\n            path: `${AUTH_PREFIX_PATH}/error-2`,\r\n            title: 'sidenav.errors.error.2',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: 'dashboards',\r\n    path: `${APP_PREFIX_PATH}/dashboards`,\r\n    title: 'sidenav.dashboard',\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: 'dashboards-default',\r\n        path: `${APP_PREFIX_PATH}/dashboards/default`,\r\n        title: 'Dashboard',\r\n        icon: DashboardOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      // {\r\n      //   key: 'dashboards-analytic',\r\n      //   path: `${APP_PREFIX_PATH}/dashboards/analytic`,\r\n      //   title: 'sidenav.dashboard.analytic',\r\n      //   icon: DotChartOutlined,\r\n      //   breadcrumb: false,\r\n      //   submenu: [],\r\n      // },\r\n\r\n      {\r\n        key: 'dashboards-catalog',\r\n        path: `${APP_PREFIX_PATH}/dashboards/catalog`,\r\n        title: 'Catalog',\r\n        icon: AppstoreOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n          // {\r\n          //   key: 'dashboards-catalog-brands',\r\n          //   path: `${APP_PREFIX_PATH}/dashboards/catalog/brand/brands-list`,\r\n          //   title: 'Brands',\r\n          //   icon: VerifiedOutlined,\r\n          //   breadcrumb: false,\r\n          //   submenu: [],\r\n          // },\r\n          // {\r\n          //   key: 'dashboards-catalog-banner',\r\n          //   path: `${APP_PREFIX_PATH}/dashboards/catalog/banner/banner-list`,\r\n          //   title: 'Banner',\r\n          //   icon: BorderOutlined,\r\n          //   breadcrumb: false,\r\n          //   submenu: [],\r\n          // },\r\n          // {\r\n          //   key: 'dashboards-catalog-category',\r\n          //   path: `${APP_PREFIX_PATH}/dashboards/catalog/category/category-list`,\r\n          //   title: 'Category',\r\n          //   icon: ApartmentOutlined,\r\n          //   breadcrumb: false,\r\n          //   submenu: [],\r\n          // },\r\n          // {\r\n          //   key: 'dashboards-catalog-producttemplate',\r\n          //   path: `${APP_PREFIX_PATH}/dashboards/catalog/producttemplate/producttemplate-list`,\r\n          //   title: 'Product Template',\r\n          //   icon: BookOutlined,\r\n          //   breadcrumb: false,\r\n          //   submenu: [],\r\n          // },\r\n\r\n          // {\r\n          //   key: 'dashboards-catalog-attribute',\r\n          //   path: `${APP_PREFIX_PATH}/dashboards/catalog/attribute/attribute-list`,\r\n          //   title: 'Attribute',\r\n          //   icon: FundProjectionScreenOutlined,\r\n          //   breadcrumb: false,\r\n          //   submenu: [],\r\n          // },\r\n          // {\r\n          //   key: 'dashboards-catalog-manufacturer',\r\n          //   path: `${APP_PREFIX_PATH}/dashboards/catalog/manufacturer/manufacturer-list`,\r\n          //   title: 'Manufacturer',\r\n          //   icon: FormatPainterOutlined,\r\n          //   breadcrumb: false,\r\n          //   submenu: [],\r\n          // },\r\n          {\r\n            key: 'dashboards-catalog-product',\r\n            path: `${APP_PREFIX_PATH}/dashboards/catalog/product/product-list`,\r\n            title: 'Products',\r\n            icon: FormatPainterOutlined,\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n\r\n      // {\r\n      //   key: 'dashboards-users',\r\n      //   path: `${APP_PREFIX_PATH}/dashboards/users`,\r\n      //   title: 'Users',\r\n      //   icon: UsergroupAddOutlined,\r\n      //   breadcrumb: false,\r\n      //   submenu: [\r\n      //     {\r\n      //       key: 'dashboards-users-usergroup',\r\n      //       path: `${APP_PREFIX_PATH}/dashboards/users/usergroup/usergroup-list`,\r\n      //       title: 'User Group',\r\n      //       icon: UsergroupAddOutlined,\r\n      //       breadcrumb: false,\r\n      //       submenu: [],\r\n      //     },\r\n      //     {\r\n      //       key: 'dashboards-users-customers',\r\n      //       path: `${APP_PREFIX_PATH}/dashboards/users/customer/customer-list`,\r\n      //       title: 'Customer',\r\n      //       icon: UserOutlined,\r\n      //       breadcrumb: false,\r\n      //       submenu: [],\r\n      //     },\r\n      //   ],\r\n      // },\r\n\r\n      // {\r\n      //   key: 'dashboards-information',\r\n      //   path: `${APP_PREFIX_PATH}/dashboards/information/information-list`,\r\n      //   title: 'Information',\r\n      //   icon: DotChartOutlined,\r\n      //   breadcrumb: false,\r\n      //   submenu: [],\r\n      // },\r\n      {\r\n        key: 'dashboards-deliveryzones',\r\n        path: `${APP_PREFIX_PATH}/dashboards/deliveryzone/deliveryzone-list`,\r\n        title: 'Delivery Zone',\r\n        icon: DotChartOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nconst appsNavTree = [\r\n  {\r\n    key: 'apps',\r\n    path: `${APP_PREFIX_PATH}/apps`,\r\n    title: 'sidenav.apps',\r\n    icon: AppstoreOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: 'apps-mail',\r\n        path: `${APP_PREFIX_PATH}/apps/mail/inbox`,\r\n        title: 'sidenav.apps.mail',\r\n        icon: MailOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'apps-chat',\r\n        path: `${APP_PREFIX_PATH}/apps/chat`,\r\n        title: 'sidenav.apps.chat',\r\n        icon: MessageOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'apps-calendar',\r\n        path: `${APP_PREFIX_PATH}/apps/calendar`,\r\n        title: 'sidenav.apps.calendar',\r\n        icon: CalendarOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'apps-project',\r\n        path: `${APP_PREFIX_PATH}/apps/project`,\r\n        title: 'sidenav.apps.project',\r\n        icon: BulbOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'apps-project-list',\r\n            path: `${APP_PREFIX_PATH}/apps/project/list`,\r\n            title: 'sidenav.apps.project.list',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'apps-project-scrumboard',\r\n            path: `${APP_PREFIX_PATH}/apps/project/scrumboard`,\r\n            title: 'sidenav.apps.project.scrumboard',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'apps-ecommerce',\r\n        path: `${APP_PREFIX_PATH}/apps/ecommerce`,\r\n        title: 'sidenav.apps.ecommerce',\r\n        icon: ShoppingCartOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'apps-ecommerce-productList',\r\n            path: `${APP_PREFIX_PATH}/apps/ecommerce/product-list`,\r\n            title: 'sidenav.apps.ecommerce.productList',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'apps-ecommerce-addProduct',\r\n            path: `${APP_PREFIX_PATH}/apps/ecommerce/add-product`,\r\n            title: 'sidenav.apps.ecommerce.addProduct',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'apps-ecommerce-editProduct',\r\n            path: `${APP_PREFIX_PATH}/apps/ecommerce/edit-product/12`,\r\n            title: 'sidenav.apps.ecommerce.editProduct',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'apps-ecommerce-orders',\r\n            path: `${APP_PREFIX_PATH}/apps/ecommerce/orders`,\r\n            title: 'sidenav.apps.ecommerce.orders',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nconst componentsNavTree = [\r\n  {\r\n    key: 'components',\r\n    path: `${APP_PREFIX_PATH}/components`,\r\n    title: 'sidenav.components',\r\n    icon: AntDesignOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'components-general',\r\n        path: `${APP_PREFIX_PATH}/components/general`,\r\n        title: 'sidenav.components.general',\r\n        icon: InfoCircleOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-general-button',\r\n            path: `${APP_PREFIX_PATH}/components/general/button`,\r\n            title: 'sidenav.components.general.button',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-general-icon',\r\n            path: `${APP_PREFIX_PATH}/components/general/icon`,\r\n            title: 'sidenav.components.general.icon',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-general-typography',\r\n            path: `${APP_PREFIX_PATH}/components/general/typography`,\r\n            title: 'sidenav.components.general.typography',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'components-layout',\r\n        path: `${APP_PREFIX_PATH}/components/layout`,\r\n        title: 'sidenav.components.layout',\r\n        icon: LayoutOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-layout-grid',\r\n            path: `${APP_PREFIX_PATH}/components/layout/grid`,\r\n            title: 'sidenav.components.layout.grid',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-layout-layout',\r\n            path: `${APP_PREFIX_PATH}/components/layout/layout`,\r\n            title: 'sidenav.components.layout.layout',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'components-navigation',\r\n        path: `${APP_PREFIX_PATH}/components/navigation`,\r\n        title: 'sidenav.components.navigation',\r\n        icon: CompassOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-navigation-affix',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/affix`,\r\n            title: 'sidenav.components.navigation.affix',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-navigation-breadcrumb',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/breadcrumb`,\r\n            title: 'sidenav.components.navigation.breadcrumb',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-navigation-dropdown',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/dropdown`,\r\n            title: 'sidenav.components.navigation.dropdown',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-navigation-menu',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/menu`,\r\n            title: 'sidenav.components.navigation.menu',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-navigation-pagination',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/pagination`,\r\n            title: 'sidenav.components.navigation.pagination',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-navigation-page-header',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/page-header`,\r\n            title: 'sidenav.components.navigation.pageHeader',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-navigation-steps',\r\n            path: `${APP_PREFIX_PATH}/components/navigation/steps`,\r\n            title: 'sidenav.components.navigation.steps',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'components-data-entry',\r\n        path: `${APP_PREFIX_PATH}/components/data-entry`,\r\n        title: 'sidenav.components.dataEntry',\r\n        icon: FileDoneOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-data-entry-auto-complete',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/auto-complete`,\r\n            title: 'sidenav.components.dataEntry.autoComplete',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-checkbox',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/checkbox`,\r\n            title: 'sidenav.components.dataEntry.checkbox',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-cascader',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/cascader`,\r\n            title: 'sidenav.components.dataEntry.cascader',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-date-picker',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/date-picker`,\r\n            title: 'sidenav.components.dataEntry.datePicker',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-form',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/form`,\r\n            title: 'sidenav.components.dataEntry.form',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-input-number',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/input-number`,\r\n            title: 'sidenav.components.dataEntry.inputNumber',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-input',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/input`,\r\n            title: 'sidenav.components.dataEntry.input',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-mentions',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/mentions`,\r\n            title: 'sidenav.components.dataEntry.mentions',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-rate',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/rate`,\r\n            title: 'sidenav.components.dataEntry.rate',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-radio',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/radio`,\r\n            title: 'sidenav.components.dataEntry.radio',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-switch',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/switch`,\r\n            title: 'sidenav.components.dataEntry.switch',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-slider',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/slider`,\r\n            title: 'sidenav.components.dataEntry.slider',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-select',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/select`,\r\n            title: 'sidenav.components.dataEntry.select',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-tree-select',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/tree-select`,\r\n            title: 'sidenav.components.dataEntry.treeSelect',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-transfer',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/transfer`,\r\n            title: 'sidenav.components.dataEntry.transfer',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-time-picker',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/time-picker`,\r\n            title: 'sidenav.components.dataEntry.timePicker',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-entry-upload',\r\n            path: `${APP_PREFIX_PATH}/components/data-entry/upload`,\r\n            title: 'sidenav.components.dataEntry.upload',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'components-data-display',\r\n        path: `${APP_PREFIX_PATH}/components/data-display`,\r\n        title: 'sidenav.components.dataDisplay',\r\n        icon: DesktopOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-data-display-avatar',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/avatar`,\r\n            title: 'sidenav.components.dataDisplay.avatar',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-badge',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/badge`,\r\n            title: 'sidenav.components.dataDisplay.badge',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-comment',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/comment`,\r\n            title: 'sidenav.components.dataDisplay.comment',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-collapse',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/collapse`,\r\n            title: 'sidenav.components.dataDisplay.collapse',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-carousel',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/carousel`,\r\n            title: 'sidenav.components.dataDisplay.carousel',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-card',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/card`,\r\n            title: 'sidenav.components.dataDisplay.card',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-calendar',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/calendar`,\r\n            title: 'sidenav.components.dataDisplay.calendar',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-descriptions',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/descriptions`,\r\n            title: 'sidenav.components.dataDisplay.descriptions',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-empty',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/empty`,\r\n            title: 'sidenav.components.dataDisplay.empty',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-list',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/list`,\r\n            title: 'sidenav.components.dataDisplay.list',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-popover',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/popover`,\r\n            title: 'sidenav.components.dataDisplay.popover',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-statistic',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/statistic`,\r\n            title: 'sidenav.components.dataDisplay.statistic',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-tree',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/tree`,\r\n            title: 'sidenav.components.dataDisplay.tree',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-tooltip',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/tooltip`,\r\n            title: 'sidenav.components.dataDisplay.tooltip',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-timeline',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/timeline`,\r\n            title: 'sidenav.components.dataDisplay.timeline',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-tag',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/tag`,\r\n            title: 'sidenav.components.dataDisplay.tag',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-tabs',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/tabs`,\r\n            title: 'sidenav.components.dataDisplay.tabs',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-data-display-table',\r\n            path: `${APP_PREFIX_PATH}/components/data-display/table`,\r\n            title: 'sidenav.components.dataDisplay.table',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'components-feedback',\r\n        path: `${APP_PREFIX_PATH}/components/feedback`,\r\n        title: 'sidenav.components.feedback',\r\n        icon: CommentOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-feedback-alert',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/alert`,\r\n            title: 'sidenav.components.feedback.alert',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-feedback-drawer',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/drawer`,\r\n            title: 'sidenav.components.feedback.drawer',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-feedback-modal',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/modal`,\r\n            title: 'sidenav.components.feedback.modal',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-feedback-message',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/message`,\r\n            title: 'sidenav.components.feedback.message',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-feedback-notification',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/notification`,\r\n            title: 'sidenav.components.feedback.notification',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-feedback-progress',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/progress`,\r\n            title: 'sidenav.components.feedback.progress',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-feedback-popconfirm',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/popconfirm`,\r\n            title: 'sidenav.components.feedback.popconfirm',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-feedback-result',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/result`,\r\n            title: 'sidenav.components.feedback.result',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-feedback-spin',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/spin`,\r\n            title: 'sidenav.components.feedback.spin',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-feedback-skeleton',\r\n            path: `${APP_PREFIX_PATH}/components/feedback/skeleton`,\r\n            title: 'sidenav.components.feedback.skeleton',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'components-other',\r\n        path: `${APP_PREFIX_PATH}/components/other`,\r\n        title: 'sidenav.components.other',\r\n        icon: RobotOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-other-anchor',\r\n            path: `${APP_PREFIX_PATH}/components/other/anchor`,\r\n            title: 'sidenav.components.other.anchor',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-other-backtop',\r\n            path: `${APP_PREFIX_PATH}/components/other/backtop`,\r\n            title: 'sidenav.components.other.backtop',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-other-config-provider',\r\n            path: `${APP_PREFIX_PATH}/components/other/config-provider`,\r\n            title: 'sidenav.components.other.configProvider',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-other-divider',\r\n            path: `${APP_PREFIX_PATH}/components/other/divider`,\r\n            title: 'sidenav.components.other.divider',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'components-charts',\r\n        path: `${APP_PREFIX_PATH}/components/charts`,\r\n        title: 'sidenav.charts',\r\n        icon: PieChartOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-charts-apex',\r\n            path: `${APP_PREFIX_PATH}/components/charts/apex-charts`,\r\n            title: 'sidenav.charts.apex',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-charts-chartjs',\r\n            path: `${APP_PREFIX_PATH}/components/charts/chartjs`,\r\n            title: 'sidenav.charts.chartjs',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'components-maps',\r\n        path: `${APP_PREFIX_PATH}/components/maps`,\r\n        title: 'sidenav.maps',\r\n        icon: EnvironmentOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'components-maps-google',\r\n            path: `${APP_PREFIX_PATH}/components/maps/google-map`,\r\n            title: 'sidenav.maps.google',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'components-maps-simple',\r\n            path: `${APP_PREFIX_PATH}/components/maps/simple-map`,\r\n            title: 'sidenav.maps.simple',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nconst docsNavTree = [\r\n  {\r\n    key: 'docs',\r\n    path: `${APP_PREFIX_PATH}/docs`,\r\n    title: 'sidenav.docs',\r\n    icon: BookOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: 'docs-documentation',\r\n        path: `${APP_PREFIX_PATH}/docs/documentation`,\r\n        title: 'sidenav.docs.documentation',\r\n        icon: FileUnknownOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'docs-changelog',\r\n        path: `${APP_PREFIX_PATH}/docs/documentation/changelog`,\r\n        title: 'sidenav.docs.changelog',\r\n        icon: ProfileOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n  // ...appsNavTree,\r\n  // ...componentsNavTree,\r\n  // ...extraNavTree,\r\n  // ...docsNavTree,\r\n]\r\n\r\nexport default navigationConfig\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span className=\"d-flex align-items-center\">\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  popupClassName=\"top-nav-menu\"\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_TOP,\r\n} from 'constants/ThemeConstant'\r\nimport { APP_NAME } from 'configs/AppConfig'\r\nimport { connect } from 'react-redux'\r\nimport utils from 'utils'\r\nimport { Grid } from 'antd'\r\n\r\nconst { useBreakpoint } = Grid\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if (isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if (isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if (navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props\r\n  if (logoType === 'light') {\r\n    if (navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if (isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)}\r\n      style={{ width: `${getLogoWidthGutter(props, isMobile)}` }}\r\n    >\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } = theme\r\n  return { navCollapsed, navType }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Logo)\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState } from 'react'\r\nimport { Menu, Dropdown, Badge, Avatar, List, Button } from 'antd'\r\nimport {\r\n  MailOutlined,\r\n  BellOutlined,\r\n  WarningOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons'\r\nimport notificationData from 'assets/data/notification.data.json'\r\nimport Flex from 'components/shared-components/Flex'\r\n\r\nconst getIcon = (icon) => {\r\n  switch (icon) {\r\n    case 'mail':\r\n      return <MailOutlined />\r\n    case 'alert':\r\n      return <WarningOutlined />\r\n    case 'check':\r\n      return <CheckCircleOutlined />\r\n    default:\r\n      return <MailOutlined />\r\n  }\r\n}\r\n\r\nconst getNotificationBody = (list) => {\r\n  return list.length > 0 ? (\r\n    <List\r\n      size=\"small\"\r\n      itemLayout=\"horizontal\"\r\n      dataSource={list}\r\n      renderItem={(item) => (\r\n        <List.Item className=\"list-clickable\">\r\n          <Flex alignItems=\"center\">\r\n            <div className=\"pr-3\">\r\n              {item.img ? (\r\n                <Avatar src={`/img/avatars/${item.img}`} />\r\n              ) : (\r\n                <Avatar\r\n                  className={`ant-avatar-${item.type}`}\r\n                  icon={getIcon(item.icon)}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"mr-3\">\r\n              <span className=\"font-weight-bold text-dark\">{item.name} </span>\r\n              <span className=\"text-gray-light\">{item.desc}</span>\r\n            </div>\r\n            <small className=\"ml-auto\">{item.time}</small>\r\n          </Flex>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  ) : (\r\n    <div className=\"empty-notification\">\r\n      <img\r\n        src=\"https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg\"\r\n        alt=\"empty\"\r\n      />\r\n      <p className=\"mt-3\">You have viewed all notifications</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const NavNotification = () => {\r\n  const [visible, setVisible] = useState(false)\r\n  const [data, setData] = useState(notificationData)\r\n\r\n  const handleVisibleChange = (flag) => {\r\n    setVisible(flag)\r\n  }\r\n\r\n  const notificationList = (\r\n    <div className=\"nav-dropdown nav-notification\">\r\n      {/* <div className=\"nav-notification-header d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"mb-0\">Notification</h4>\r\n        <Button className=\"text-primary\" type=\"text\" onClick={() => setData([])} size=\"small\">Clear </Button>\r\n      </div> */}\r\n      {/* <div className=\"nav-notification-body\">\r\n        {getNotificationBody(data)}\r\n      </div>\r\n      {\r\n        data.length > 0 ? \r\n        <div className=\"nav-notification-footer\">\r\n          <a className=\"d-block\" href=\"#/\">View all</a>\r\n        </div>\r\n        :\r\n        null\r\n      } */}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Dropdown\r\n      placement=\"bottomRight\"\r\n      overlay={notificationList}\r\n      onVisibleChange={handleVisibleChange}\r\n      visible={visible}\r\n      trigger={['click']}\r\n    >\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"notification\">\r\n          <Badge count={data.length}>\r\n            <BellOutlined className=\"nav-icon mx-auto\" type=\"bell\" />\r\n          </Badge>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default NavNotification\r\n","import React from 'react'\r\nimport { Menu, Dropdown, Avatar } from 'antd'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport {\r\n  EditOutlined,\r\n  SettingOutlined,\r\n  ShopOutlined,\r\n  QuestionCircleOutlined,\r\n  LogoutOutlined,\r\n} from '@ant-design/icons'\r\nimport Icon from 'components/util-components/Icon'\r\nimport { signOut } from 'redux/actions/Auth'\r\n\r\nconst menuItem = [\r\n  {\r\n    title: 'Edit Profile',\r\n    icon: EditOutlined,\r\n    path: '/app/dashboards/profile',\r\n  },\r\n]\r\n\r\nexport const NavProfile = ({ signOut }) => {\r\n  const { user } = useSelector((state) => state.auth)\r\n\r\n  const profileImg = '/img/avatars/thumb-1.jpg'\r\n  const profileMenu = (\r\n    <div className=\"nav-profile nav-dropdown\">\r\n      <div className=\"nav-profile-header\">\r\n        <div className=\"d-flex\">\r\n          <Avatar size={45} src={user.displayImage} />\r\n          <div className=\"pl-3\">\r\n            <h4 className=\"mb-0\">{user.firstName}</h4>\r\n            <span className=\"text-muted\">{user.userType}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-profile-body\">\r\n        <Menu>\r\n          {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <a href={el.path}>\r\n                  <Icon type={el.icon} />\r\n                  <span className=\"font-weight-normal\">{el.title}</span>\r\n                </a>\r\n              </Menu.Item>\r\n            )\r\n          })}\r\n          <Menu.Item key={menuItem.length + 1} onClick={(e) => signOut()}>\r\n            <span>\r\n              <LogoutOutlined />\r\n              <span className=\"font-weight-normal\">Sign Out</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  )\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={['click']}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item key=\"profile\">\r\n          <Avatar src={user.displayImage} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default connect(null, { signOut })(NavProfile)\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={elm.langName} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item key=\"language\">\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tdirection,\r\n\tonDirectionChange\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Direction:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onDirectionChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={direction}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_LTR}>LTR</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_RTL}>RTL</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item key=\"panel\" onClick={this.showDrawer}>\r\n            <span><SettingOutlined className=\"nav-icon mr-0\" /></span>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement={this.props.direction === DIR_RTL ? 'left' : 'right'} \r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput'\r\n\r\nexport const NavSearch = (props) => {\r\n  const { active, close, headerNavColor } = props\r\n  const mode = utils.getColorContrast(headerNavColor)\r\n\r\n  return (\r\n    <div\r\n      className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`}\r\n      style={{ backgroundColor: headerNavColor }}\r\n    >\r\n      <div className=\"d-flex align-items-center w-100\">\r\n        <SearchInput close={close} active={active} />\r\n      </div>\r\n      <div className=\"nav-close\" onClick={close}>\r\n        <CloseOutlined />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } = theme\r\n  return { headerNavColor }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Layout } from 'antd'\r\nimport {\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons'\r\nimport Logo from './Logo'\r\nimport NavNotification from './NavNotification'\r\nimport NavProfile from './NavProfile'\r\nimport NavLanguage from './NavLanguage'\r\nimport NavPanel from './NavPanel'\r\nimport NavSearch from './NavSearch'\r\nimport SearchInput from './NavSearch/SearchInput.js'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme'\r\nimport {\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  SIDE_NAV_WIDTH,\r\n} from 'constants/ThemeConstant'\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout\r\n\r\nexport const HeaderNav = (props) => {\r\n  const {\r\n    navCollapsed,\r\n    mobileNav,\r\n    navType,\r\n    headerNavColor,\r\n    toggleCollapsedNav,\r\n    onMobileNavToggle,\r\n    isMobile,\r\n    currentTheme,\r\n    direction,\r\n  } = props\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchActive = () => {\r\n    setSearchActive(true)\r\n  }\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(\r\n        currentTheme === 'dark' ? '#00000' : '#ffffff'\r\n      )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header\r\n      className={`app-header ${navMode}`}\r\n      style={{ backgroundColor: headerNavColor }}\r\n    >\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode} />\r\n        <div className=\"nav\" style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">\r\n              {isNavTop && !isMobile ? null : (\r\n                <li\r\n                  className=\"ant-menu-item ant-menu-item-only-child\"\r\n                  onClick={() => {\r\n                    onToggle()\r\n                  }}\r\n                >\r\n                  {navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className=\"nav-icon\" />\r\n                  ) : (\r\n                    <MenuFoldOutlined className=\"nav-icon\" />\r\n                  )}\r\n                </li>\r\n              )}\r\n              {/* {isMobile ? (\r\n                <li\r\n                  className=\"ant-menu-item ant-menu-item-only-child\"\r\n                  onClick={() => {\r\n                    onSearchActive()\r\n                  }}\r\n                >\r\n                  <SearchOutlined />\r\n                </li>\r\n              ) : (\r\n                <li\r\n                  className=\"ant-menu-item ant-menu-item-only-child\"\r\n                  style={{ cursor: 'auto' }}\r\n                >\r\n                  <SearchInput mode={mode} isMobile={isMobile} />\r\n                </li>\r\n              )} */}\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavNotification />\r\n            {/* <NavLanguage /> */}\r\n            <NavProfile />\r\n            {/* <NavPanel direction={direction} /> */}\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose} />\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  } = theme\r\n  return {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleCollapsedNav,\r\n  onMobileNavToggle,\r\n})(HeaderNav)\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn (\r\n\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t<Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t</Breadcrumb.Item>\r\n\t\t);\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/dashboards`} component={lazy(() => import(`./dashboards`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/apps`} component={lazy(() => import(`./apps`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/components`} component={lazy(() => import(`./components`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/pages`} component={lazy(() => import(`./pages`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/maps`} component={lazy(() => import(`./maps`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/charts`} component={lazy(() => import(`./charts`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/docs`} component={lazy(() => import(`./docs`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/dashboards`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if(direction === DIR_LTR) {\r\n      return {paddingLeft: getLayoutGutter()}\r\n    }  \r\n    if(direction === DIR_RTL) {\r\n      return {paddingRight: getLayoutGutter()}\r\n    }\r\n    return {paddingLeft: getLayoutGutter()}\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nexport const AuthLayout = () => {\r\n\tconst { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from 'react'\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport AppLayout from 'layouts/app-layout'\r\nimport AuthLayout from 'layouts/auth-layout'\r\nimport AppLocale from 'lang'\r\nimport { IntlProvider } from 'react-intl'\r\nimport { ConfigProvider } from 'antd'\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport useBodyClass from 'hooks/useBodyClass'\r\nimport Loading from 'components/shared-components/Loading'\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, loading, ...rest }) {\r\n  console.log(loading, isAuthenticated, 'state')\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loading && !isAuthenticated ? (\r\n          <Loading cover=\"content\" />\r\n        ) : isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          !loading &&\r\n          !isAuthenticated && (\r\n            <Redirect\r\n              to={{\r\n                pathname: AUTH_PREFIX_PATH,\r\n                state: { from: location },\r\n              }}\r\n            />\r\n          )\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, authorized, token, location, direction, loading } = props\r\n  console.log('auth', authorized)\r\n  const currentAppLocale = AppLocale[locale]\r\n  useBodyClass(`dir-${direction}`)\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}\r\n    >\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <RouteInterceptor\r\n            path={APP_PREFIX_PATH}\r\n            isAuthenticated={authorized}\r\n            loading={loading}\r\n          >\r\n            <AppLayout direction={direction} location={location} />\r\n          </RouteInterceptor>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale, direction } = theme\r\n  const { token, authorized, loading } = auth\r\n  return { locale, direction, token, authorized, loading }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views))\r\n","import React, { useEffect } from 'react'\r\nimport { Provider, useDispatch } from 'react-redux'\r\nimport store from './redux/store'\r\nimport { Router } from 'react-router-dom'\r\nimport Views from './views'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { ThemeSwitcherProvider } from 'react-css-theme-switcher'\r\nimport { THEME_CONFIG } from './configs/AppConfig'\r\nimport { auth } from 'auth/FirebaseAuth'\r\nimport authVendorService from 'services/auth/vendor'\r\nimport { authenticated, showLoading, signOut } from 'redux/actions/Auth'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport const history = createHistory()\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n}\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    // dispatch(showLoading(false))\r\n    auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        const idTokenResult = await user.getIdTokenResult(true)\r\n        const userType = idTokenResult.claims.userType\r\n\r\n        if (userType === 'Vendor') {\r\n          window.localStorage.setItem('auth_token', idTokenResult.token)\r\n          const data = await authVendorService.getProfile()\r\n          if (data) {\r\n            const dispatchingData = {\r\n              userType,\r\n              firstName: data.firstName,\r\n              lastName: data.lastName,\r\n              email: user.email,\r\n              phone: user.phoneNumber,\r\n              displayImage: data.displayImage,\r\n              emailVerified: user.emailVerified,\r\n              phoneVerified: user.phoneNumber ? true : false,\r\n              address: data.address,\r\n              business: data.business,\r\n              gst: data.gst,\r\n              tanNumber: data.tanNumber,\r\n            }\r\n\r\n            dispatch(\r\n              authenticated({\r\n                user: dispatchingData,\r\n                token: idTokenResult.token,\r\n              })\r\n            )\r\n\r\n            dispatch(showLoading(false))\r\n          }\r\n        } else if (userType !== 'Customer' && userType !== 'Admin') {\r\n          // Redux Store\r\n          window.localStorage.setItem('auth_token', idTokenResult.token)\r\n          const dispatchingData = {\r\n            firstName: user.displayName,\r\n            displayImage: user.photoURL,\r\n            lastName: null,\r\n            email: user.email,\r\n            phone: user.phoneNumber,\r\n            emailVerified: user.emailVerified,\r\n            phoneVerified: user.phoneNumber ? true : false,\r\n            address: {},\r\n            business: {},\r\n            tanNumber: null,\r\n            gst: null,\r\n            // passwordVerified: passwordAvailable?.providerId ? true : false,\r\n          }\r\n          dispatch(\r\n            authenticated({\r\n              user: dispatchingData,\r\n              token: idTokenResult.token,\r\n            })\r\n          )\r\n          dispatch(showLoading(false))\r\n        } else {\r\n          FirebaseService.signOutRequest()\r\n          dispatch(signOut())\r\n        }\r\n\r\n        console.log(idTokenResult, 'user-current')\r\n        dispatch(showLoading(false))\r\n\r\n        if (!user.emailVerified) {\r\n          notification.warn({\r\n            message: 'You need to Verify your Email',\r\n          })\r\n        }\r\n        if (user.phoneNumber === '') {\r\n          notification.warn({\r\n            message: 'You need to Verify your Phone Number',\r\n          })\r\n        }\r\n\r\n        // const idTokenResult = await user.getIdTokenResult(true)\r\n        // const userType = idTokenResult.claims.userType\r\n        // window.localStorage.setItem(AUTH_TOKEN, idTokenResult.token)\r\n        // if (userType === 'Admin') {\r\n        //   const data = await authVendorService.getProfile()\r\n        //   if (data) {\r\n        //     console.log(data, 'heteet')\r\n        //     const userData = {\r\n        //       userType,\r\n        //       firstName: data.firstName,\r\n        //       lastName: data.lastName,\r\n        //       email: data.email,\r\n        //       phone: data.phone,\r\n        //       displayImage: data.displayImage,\r\n        //       emailVerified: user.emailVerified,\r\n        //       phoneVerified: user.phoneNumber ? true : false,\r\n        //     }\r\n\r\n        //     dispatch(\r\n        //       authenticated({ user: userData, token: idTokenResult.token })\r\n        //     )\r\n        //     dispatch(showLoading(false))\r\n        //   }\r\n        // } else {\r\n        //   dispatch(signOut())\r\n        //   dispatch(showLoading(false))\r\n        // }\r\n      } else {\r\n        dispatch(showLoading(false))\r\n      }\r\n    })\r\n  }, [])\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Provider store={store}> */}\r\n      <ThemeSwitcherProvider\r\n        themeMap={themes}\r\n        defaultTheme={THEME_CONFIG.currentTheme}\r\n        insertionPoint=\"styles-insertion-point\"\r\n      >\r\n        <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" component={Views} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeSwitcherProvider>\r\n      {/* </Provider> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n// const unsubscribe = authentication.onAuthStateChanged(async (user) => {\r\n//   dispatch(setUserLoading(true))\r\n\r\n//   if (user) {\r\n//     const idTokenResult = await user.getIdTokenResult(true)\r\n//     const userType = idTokenResult.claims.userType\r\n\r\n//     if (userType === 'Customer') {\r\n//       try {\r\n//         const {\r\n//           data: { data },\r\n//         } = await getUserProfileApi()\r\n//         const dispatchingData = {\r\n//           userType,\r\n//           firstName: data.firstName,\r\n//           lastName: data.lastName,\r\n//           email: user.email,\r\n//           phone: user.phoneNumber,\r\n//           displayImage: data.displayImage,\r\n//           emailVerified: user.emailVerified,\r\n//           phoneVerified: user.phoneNumber ? true : false,\r\n//         }\r\n//         dispatch(setUser(dispatchingData))\r\n//         dispatch(setToken(idTokenResult.token))\r\n//         dispatch(setUserLoading(false))\r\n//       } catch (err) {\r\n//         toast.error(err.response.data.title)\r\n//         console.log('the-errr', err.response.data)\r\n//         dispatch(setLogout())\r\n//         dispatch(setUserLoading(false))\r\n//       }\r\n//     } else {\r\n//       // Redux Store\r\n//       dispatch(\r\n//         setUser({\r\n//           firstName: user.displayName,\r\n//           displayImage: user.photoURL,\r\n//           lastName: null,\r\n//           email: user.email,\r\n//           phone: user.phoneNumber,\r\n//           emailVerified: user.emailVerified,\r\n//           phoneVerified: user.phoneNumber ? true : false,\r\n//           // passwordVerified: passwordAvailable?.providerId ? true : false,\r\n//         })\r\n//       )\r\n//       dispatch(setToken(idTokenResult.token))\r\n//       dispatch(setUserLoading(false))\r\n//     }\r\n\r\n//     console.log(idTokenResult, 'user-current')\r\n\r\n//     // const passwordAvailable = user.providerData?.find(\r\n//     //   (cur) => cur.providerId === 'password'\r\n//     // )\r\n\r\n//     if (!user.emailVerified) {\r\n//       toast.warning(`You need to Verify your Email`)\r\n//     }\r\n//     if (user.phoneNumber === '') {\r\n//       toast.warning(`You need to Verify your Phone Number`)\r\n//     }\r\n//   }\r\n//   dispatch(setUserLoading(false))\r\n// })\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","export const SIGNIN = 'SIGNIN'\r\nexport const AUTHENTICATED = 'AUTHENTICATED'\r\nexport const SIGNOUT = 'SIGNOUT'\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED =\r\n  'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED =\r\n  'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'\r\n","import fetch from 'auth/FetchInterceptor'\r\n\r\nconst authVendorService = {}\r\n\r\nauthVendorService.getProfile = async function () {\r\n  try {\r\n    const res = await fetch({\r\n      url: '/vendors',\r\n      method: 'get',\r\n    })\r\n\r\n    return res.data\r\n  } catch (err) {\r\n    console.log(err, 'show-err')\r\n  }\r\n}\r\n\r\nauthVendorService.createVendor = async function (data) {\r\n  try {\r\n    const res = await fetch({\r\n      url: '/vendors/register',\r\n      method: 'post',\r\n      data,\r\n    })\r\n\r\n    return res\r\n  } catch (err) {\r\n    console.log(err, 'show-err')\r\n  }\r\n}\r\n\r\nauthVendorService.editProfile = async function (data) {\r\n  try {\r\n    const res = await fetch({\r\n      url: '/vendors',\r\n      method: 'put',\r\n      data,\r\n    })\r\n\r\n    return res\r\n  } catch (err) {\r\n    console.log(err, 'show-err')\r\n  }\r\n}\r\n\r\n// authVendorService.setPost = function (data) {\r\n//   return fetch({\r\n//     url: '/posts',\r\n//     method: 'post',\r\n//     data: data\r\n//   })\r\n// }\r\n\r\nexport default authVendorService\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n} from '../constants/Auth'\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user,\r\n  }\r\n}\r\n\r\nexport const authenticated = (data) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT,\r\n  }\r\n}\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n}\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user,\r\n  }\r\n}\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token,\r\n  }\r\n}\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE,\r\n  }\r\n}\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token,\r\n  }\r\n}\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK,\r\n  }\r\n}\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token,\r\n  }\r\n}\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message,\r\n  }\r\n}\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  }\r\n}\r\n\r\nexport const showLoading = (loading) => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n    loading,\r\n  }\r\n}\r\n","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import { notification } from 'antd'\r\n\r\nclass Utils {\r\n  /**\r\n   * Get first character from first & last sentences of a username\r\n   * @param {String} name - Username\r\n   * @return {String} 2 characters string\r\n   */\r\n  static getNameInitial(name) {\r\n    let initials = name.match(/\\b\\w/g) || []\r\n    return ((initials.shift() || '') + (initials.pop() || '')).toUpperCase()\r\n  }\r\n\r\n  /**\r\n   * Get current path related object from Navigation Tree\r\n   * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n   * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n   * @return {Object} object that contained the path string\r\n   */\r\n  static getRouteInfo(navTree, path) {\r\n    if (navTree.path === path) {\r\n      return navTree\r\n    }\r\n    let route\r\n    for (let p in navTree) {\r\n      if (navTree.hasOwnProperty(p) && typeof navTree[p] === 'object') {\r\n        route = this.getRouteInfo(navTree[p], path)\r\n        if (route) {\r\n          return route\r\n        }\r\n      }\r\n    }\r\n    return route\r\n  }\r\n\r\n  /**\r\n   * Get accessible color contrast\r\n   * @param {String} hex - Hex color code e.g '#3e82f7'\r\n   * @return {String} 'dark' or 'light'\r\n   */\r\n  static getColorContrast(hex) {\r\n    if (!hex) {\r\n      return 'dark'\r\n    }\r\n    const threshold = 130\r\n    const hRed = hexToR(hex)\r\n    const hGreen = hexToG(hex)\r\n    const hBlue = hexToB(hex)\r\n    function hexToR(h) {\r\n      return parseInt(cutHex(h).substring(0, 2), 16)\r\n    }\r\n    function hexToG(h) {\r\n      return parseInt(cutHex(h).substring(2, 4), 16)\r\n    }\r\n    function hexToB(h) {\r\n      return parseInt(cutHex(h).substring(4, 6), 16)\r\n    }\r\n    function cutHex(h) {\r\n      return h.charAt(0) === '#' ? h.substring(1, 7) : h\r\n    }\r\n    const cBrightness = (hRed * 299 + hGreen * 587 + hBlue * 114) / 1000\r\n    if (cBrightness > threshold) {\r\n      return 'dark'\r\n    } else {\r\n      return 'light'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Darken or lighten a hex color\r\n   * @param {String} color - Hex color code e.g '#3e82f7'\r\n   * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n   * @return {String} Darken or lighten color\r\n   */\r\n  static shadeColor(color, percent) {\r\n    let R = parseInt(color.substring(1, 3), 16)\r\n    let G = parseInt(color.substring(3, 5), 16)\r\n    let B = parseInt(color.substring(5, 7), 16)\r\n    R = parseInt((R * (100 + percent)) / 100)\r\n    G = parseInt((G * (100 + percent)) / 100)\r\n    B = parseInt((B * (100 + percent)) / 100)\r\n    R = R < 255 ? R : 255\r\n    G = G < 255 ? G : 255\r\n    B = B < 255 ? B : 255\r\n    const RR =\r\n      R.toString(16).length === 1 ? `0${R.toString(16)}` : R.toString(16)\r\n    const GG =\r\n      G.toString(16).length === 1 ? `0${G.toString(16)}` : G.toString(16)\r\n    const BB =\r\n      B.toString(16).length === 1 ? `0${B.toString(16)}` : B.toString(16)\r\n    return `#${RR}${GG}${BB}`\r\n  }\r\n\r\n  /**\r\n   * Convert RGBA to HEX\r\n   * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n   * @return {String} HEX color\r\n   */\r\n  static rgbaToHex(rgba) {\r\n    const trim = (str) => str.replace(/^\\s+|\\s+$/gm, '')\r\n    const inParts = rgba.substring(rgba.indexOf('(')).split(','),\r\n      r = parseInt(trim(inParts[0].substring(1)), 10),\r\n      g = parseInt(trim(inParts[1]), 10),\r\n      b = parseInt(trim(inParts[2]), 10),\r\n      a = parseFloat(\r\n        trim(inParts[3].substring(0, inParts[3].length - 1))\r\n      ).toFixed(2)\r\n    const outParts = [\r\n      r.toString(16),\r\n      g.toString(16),\r\n      b.toString(16),\r\n      Math.round(a * 255)\r\n        .toString(16)\r\n        .substring(0, 2),\r\n    ]\r\n\r\n    outParts.forEach(function (part, i) {\r\n      if (part.length === 1) {\r\n        outParts[i] = '0' + part\r\n      }\r\n    })\r\n    return `#${outParts.join('')}`\r\n  }\r\n\r\n  /**\r\n   * Returns either a positive or negative\r\n   * @param {Number} number - number value\r\n   * @param {any} positive - value that return when positive\r\n   * @param {any} negative - value that return when negative\r\n   * @return {any} positive or negative value based on param\r\n   */\r\n  static getSignNum(number, positive, negative) {\r\n    if (number > 0) {\r\n      return positive\r\n    }\r\n    if (number < 0) {\r\n      return negative\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Returns either ascending or descending value\r\n   * @param {Object} a - antd Table sorter param a\r\n   * @param {Object} b - antd Table sorter param b\r\n   * @param {String} key - object key for compare\r\n   * @return {any} a value minus b value\r\n   */\r\n  static antdTableSorter(a, b, key) {\r\n    if (typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n      return a[key] - b[key]\r\n    }\r\n\r\n    if (typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n      a = a[key].toLowerCase()\r\n      b = b[key].toLowerCase()\r\n      return a > b ? -1 : b > a ? 1 : 0\r\n    }\r\n    return\r\n  }\r\n\r\n  /**\r\n   * Filter array of object\r\n   * @param {Array} list - array of objects that need to filter\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - value that excluded from filter\r\n   * @return {Array} a value minus b value\r\n   */\r\n  static filterArray(list, key, value) {\r\n    let data = list\r\n    if (list) {\r\n      data = list.filter((item) => item[key] === value)\r\n    }\r\n    return data\r\n  }\r\n\r\n  /**\r\n   * Remove object from array by value\r\n   * @param {Array} list - array of objects\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - target value\r\n   * @return {Array} Array that removed target object\r\n   */\r\n  static deleteArrayRow(list, key, value) {\r\n    let data = list\r\n    if (list) {\r\n      data = list.filter((item) => item[key] !== value)\r\n    }\r\n    return data\r\n  }\r\n\r\n  /**\r\n   * Wild card search on all property of the object\r\n   * @param {Number | String} input - any value to search\r\n   * @param {Array} list - array for search\r\n   * @return {Array} array of object contained keyword\r\n   */\r\n  static wildCardSearch(list, input) {\r\n    const searchText = (item) => {\r\n      for (let key in item) {\r\n        if (item[key] == null) {\r\n          continue\r\n        }\r\n        if (\r\n          item[key]\r\n            .toString()\r\n            .toUpperCase()\r\n            .indexOf(input.toString().toUpperCase()) !== -1\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    list = list.filter((value) => searchText(value))\r\n    return list\r\n  }\r\n\r\n  /**\r\n   * Get Breakpoint\r\n   * @param {Object} screens - Grid.useBreakpoint() from antd\r\n   * @return {Array} array of breakpoint size\r\n   */\r\n  static getBreakPoint(screens) {\r\n    let breakpoints = []\r\n    for (const key in screens) {\r\n      if (screens.hasOwnProperty(key)) {\r\n        const element = screens[key]\r\n        if (element) {\r\n          breakpoints.push(key)\r\n        }\r\n      }\r\n    }\r\n    return breakpoints\r\n  }\r\n\r\n  /**\r\n   * Get BaseName of the file\r\n   */\r\n\r\n  static getBaseName(path) {\r\n    // console.log(path)\r\n    if (path) {\r\n      const parsed = path.split('/')\r\n      return parsed[parsed.length - 1]\r\n    }\r\n    return ''\r\n  }\r\n\r\n  /**\r\n   * Create Categories based on the list of items including children\r\n   */\r\n  static createCategoryList(categories, parentId = null) {\r\n    const categoryList = []\r\n    let category\r\n    if (parentId == null) {\r\n      category = categories.filter((cat) => !cat?.parentId)\r\n    } else {\r\n      category = categories.filter((cat) => cat?.parentId === parentId)\r\n    }\r\n    // eslint-disable-next-line prefer-const\r\n    for (let cate of category) {\r\n      categoryList.push({\r\n        id: cate.id,\r\n        title: cate.name,\r\n        value: cate.id,\r\n        key: cate.id,\r\n        children: this.createCategoryList(categories, cate.id),\r\n      })\r\n    }\r\n\r\n    return categoryList\r\n  }\r\n\r\n  static createDeliveryLocationList(locations, parentId = null) {\r\n    const deliveryList = []\r\n    let delivery\r\n    if (parentId == null) {\r\n      delivery = locations.filter((cat) => !cat?.parentId)\r\n    } else {\r\n      delivery = locations.filter((cat) => cat?.parentId === parentId)\r\n    }\r\n    // eslint-disable-next-line prefer-const\r\n    for (let del of delivery) {\r\n      deliveryList.push({\r\n        id: del.id,\r\n        title: del.name,\r\n        value: del.id,\r\n        key: del.id,\r\n        children: this.createDeliveryLocationList(locations, del.id),\r\n      })\r\n    }\r\n\r\n    return deliveryList\r\n  }\r\n\r\n  static errorValidator(res) {\r\n    console.log('my-res', res)\r\n    if (res) {\r\n      if (res?.errors) {\r\n        for (const [key, value] of Object.entries(res?.errors)) {\r\n          value.forEach((cur) => {\r\n            notification.error({\r\n              description: key,\r\n              message: cur,\r\n            })\r\n          })\r\n        }\r\n      } else {\r\n        // toast.error(res.title)\r\n        notification.error({\r\n          // description: res.title,\r\n          message: res.title,\r\n        })\r\n      }\r\n    }\r\n    //  else {\r\n    //   notification.error({\r\n    //     description: 'Something Went Wrong',\r\n    //     message: 'Error',\r\n    //   });\r\n    // }\r\n  }\r\n}\r\n\r\nexport default Utils\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { injectStore } from 'auth/FetchInterceptor'\r\n\r\nimport './index.css'\r\n\r\ninjectStore(store)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, DIR_LTR } from 'constants/ThemeConstant'\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Ecommerce'\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app'\r\nexport const AUTH_PREFIX_PATH = '/auth'\r\n\r\nexport const THEME_CONFIG = {\r\n  navCollapsed: false,\r\n  sideNavTheme: SIDE_NAV_LIGHT,\r\n  locale: 'en',\r\n  navType: NAV_TYPE_SIDE,\r\n  topNavColor: '#3e82f7',\r\n  headerNavColor: '',\r\n  mobileNav: false,\r\n  currentTheme: 'light',\r\n  direction: DIR_LTR,\r\n}\r\n","const dev = {\r\n  //   API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n  API_ENDPOINT_URL: 'https://www.ecommerce.riolabz.com/api/v1',\r\n}\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://www.ecommerce.riolabz.com/api/v1',\r\n}\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://www.ecommerce.riolabz.com/api/v1',\r\n}\r\n\r\nconst getEnv = () => {\r\n  switch (process.env.NODE_ENV) {\r\n    case 'development':\r\n      return dev\r\n    case 'production':\r\n      return prod\r\n    case 'test':\r\n      return test\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nexport const env = getEnv()\r\n","const FirebaseConfig = {\r\n  // apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  // authDomain: 'emilus.firebaseapp.com',\r\n  // databaseURL: 'https://emilus.firebaseio.com',\r\n  // projectId: 'emilus',\r\n  // storageBucket: 'emilus.appspot.com',\r\n  // messagingSenderId: '807555350717',\r\n  // appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  // measurementId: 'G-8KE7HJB252'\r\n\r\n  apiKey: 'AIzaSyBUdVQKSYiMrWXKZLhpcR4pmtIUFa-40w0',\r\n  authDomain: 'zapkartnew2022-dc8a8.firebaseapp.com',\r\n  projectId: 'zapkartnew2022-dc8a8',\r\n  storageBucket: 'zapkartnew2022-dc8a8.appspot.com',\r\n  messagingSenderId: '812753080859',\r\n  appId: '1:812753080859:web:63d1a2c52ff2a2a5161ebe',\r\n}\r\n\r\nexport default FirebaseConfig\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport firebaseConfig from 'configs/FirebaseConfig'\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\n// firebase utils\r\n// const db = firebase.firestore()\r\nconst auth = firebase.auth()\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider()\r\n// const twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\n// const githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n  // db,\r\n  auth,\r\n  currentUser,\r\n  googleAuthProvider,\r\n  facebookAuthProvider,\r\n  //   twitterAuthProvider,\r\n  //   githubAuthProvider,\r\n}\r\n","import {\r\n  auth,\r\n  googleAuthProvider,\r\n  facebookAuthProvider,\r\n} from 'auth/FirebaseAuth'\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => user)\r\n    .catch((err) => err)\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => user)\r\n    .catch((err) => err)\r\n\r\nFirebaseService.signOutRequest = async () =>\r\n  await auth\r\n    .signOut()\r\n    .then((user) => user)\r\n    .catch((err) => err)\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth\r\n    .signInWithPopup(googleAuthProvider)\r\n    .then((user) => user)\r\n    .catch((err) => err)\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth\r\n    .signInWithPopup(facebookAuthProvider)\r\n    .then((user) => user)\r\n    .catch((err) => err)\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n  await auth\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((user) => user)\r\n    .catch((err) => err)\r\n\r\nexport default FirebaseService\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading"],"sourceRoot":""}